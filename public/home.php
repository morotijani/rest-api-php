<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>MY API</title>
</head>
<body style="font-family: verdana;">
	<center>
		<h1>My API</h1>
		<h3>Documentation</h3>

		<p>// first item in the url is always the table name</p>

		Signature: This is generated by creating a hash of the header and payload, combined with a secret key typically generated as either 256 bits or 32 bytes. By convention, the secret key matches the size of the hash output.

		You will have to use the link below to generate a secret key we need for this project:
		https://generate-random.org/encryption-key-generator?source=post_page-----ebf5693b931a--------------------------------

		SECRET_KEY=

		Provide database details in the .env file

		The implementation of access tokens and refresh tokens enhances security and user experience. Access tokens provide immediate access to resources and have a short lifespan(20 secs), promoting security by limiting their usability in case of unauthorized access. On the other hand, refresh tokens (5 days) have a longer lifespan and enable users to obtain new access tokens without repeated authentication

		Login to get token keys

		use refresh tokens as your Authorization Bearer Token

		Token, expires in every 5 days
		if token expires



	</center>
</body>
</html>